2019-06-25 lttng-tools 1.5.7 (Global Beatles Day)
	* Cleanup: bitfields: streamline use of underscores
	* Fix: bitfield: shift undefined/implementation defined behaviors
	* Fix: array and sequence field's 'elems' members can be left NULL
	* Fix: invalid alignment of enumeration fields

2018-07-03 babeltrace 1.5.6 (National Fried Clam Day)
	* Fix: remove left-over debug logging statement
	* Use trace->trace_id in check to remove trace from bt_ctx
	* Fix: missing initializer braces warning
	* Fix: zero out URL parsing array before use and ensure proper error reporting

2018-03-26 babeltrace 1.5.5 (Purple Day)
	* Propagate error from packet_seek in case of truncated packet
	* Fix: report truncated files while reading

2018-01-31 babeltrace 1.5.4 (Gorilla Suit Day)
	* Fix: use signed accessors for clock offsets
	* Fix: signedness error in python complements
	* Fix: handle packet_seek errors
	* Fix: prevent calling adding the same trace recursively
	* Fix: Make sure we have all the metadata streams before adding new traces
	* Add missing debugging information in the live plugin
	* Fix: set stream id in HUP case
	* Fix: Use list rather than ptr array for trace streams
	* Fix: leak of streams
	* Fix: handle 0 session case in ask new streams
	* Fix: break loop on getting metadata error
	* Fix: return error on ask_new_stream when should quit
	* Fix: don't access missing ctf trace when getting metadata
	* Fix: lttng-live discarded event count after inactivity
	* Fix: timegm compat on Solaris
	* Fix: python bindings when building with PIE hardening
	* lttng-live: print discarded event and packet lost warnings on stderr

2017-08-04 lttng-tools 1.5.3 (International Beer Day)
	* Fix: unknown variable name in Python writer
	* Fix live-comm: only apply retry timeout for already seen inactive indexes.
	* Fix live-comm: merge TCP socket write-write sequence in a single write
	* Fix: use LDFLAGS instead of LIBS for python bindings
	* Fix: Add missing LIBS to python bindings
	* ax_lib_elfutils -> bt_lib_elfutils
	* m4/ax_lib_elfutils.m4: use m4_default() for optional args.
	* m4/ax_lib_elfutils.m4: add cache variable
	* Build Python bindings with distutils for consistent installs
	* Set the minimum Python version to 3.0
	* Fix: disable debug by default info on Cygwin
	* Fix: ctf writer test on Cygwin
	* Fix: text output missing separator when printing the domain

2017-02-20 babeltrace 1.5.2 (National Cherry Pie Day)
	* Add empty plug-in hooks to prevent their elimination by the linker
	* Port: Link live lib with ctf to satisfy cygwin linker
	* Port: Link with no-undefined on Windows
	* Port: win32 DLLs don't support hidden symbols
	* Port: replace strerror_r() with glib g_strerror()

2017-01-06 babeltrace 1.5.1 ("Wheel Of Fortune" debuts on NBC)
	* Fix: perform an explicit stdout flush in live even on empty packets

2016-11-29 babeltrace 1.5.0 (National Square Dance Day)
	* Fix: remove BT_HIDDEN from bt_value_null singleton declaration
	* Fix mixing of bt_ctf_scope and bt_ctf_ir_scope enums
	* Revert ABI-breaking enum bt_ctf_string_encoding change
	* Fix: warnings emitted because of enum ctf_string_encoding mixing

2016-10-24 babeltrace 1.5.0-rc1 (First barrel ride down Niagara Falls)
	* Update version to 1.5.0
	* Python build fix
	* Fix enum rename warnings
	* Hide bt_ctf_writer_get_trace()
	* Hide bt_ctf_trace_* symbols
	* Hide get_field_paths_lca_index()
	* Remove bt_ctf_writer_add_environment_field_int64
	* Hide new bt_ctf_stream_* symbols
	* Hide new bt_ctf_stream_class_* symbols
	* Hide new bt_ctf_field_type_* symbols
	* Hide new bt_ctf_packet_* symbols
	* Hide new bt_ctf_field_* symbols
	* Hide new bt_ctf_field_path_* symbols
	* Hide new bt_ctf_event_* symbols
	* Hide bt_ctf_event_class_* symbols
	* Hide new bt_ctf_clock_* symbols
	* Hide bt_get and bt_put
	* Hide bt_values and bt_attributes in libbabeltrace-ctf
	* Backport the CTF-IR interface
	* debug info: Call register_event_debug_infos for all events
	* Typo: configure.ac implemenation -> implementation
	* configure: fix uuid support detection on static build
	* Tests: no substitution needed for multi-trace intersection test

2016-06-06 babeltrace 1.4.0 (National Yo-Yo Day)
	* Tests: dereference of NULL pointer on allocation failure
	* Tests: abort dwarf test on open() failure
	* Fix: lttng-live does not set a trace descriptor
	* Tests: Add missing --merge LOG_DRIVER_FLAGS
	* Fix: strerror_r behavior is glibc specific
	* sys/param.h is required for MAXNAMLEN on musl libc
	* Fix: undefined bit shift operation when printing octal numbers
	* Fix: Wrong variable checked in bin_info_child_die_has_address
	* Fix: Only close valid fds in is_valid_debug_file
	* Fix: Free die_name in bin_info_lookup_cu_function_name
	* Fix: Don't dereference null ptr in error path
	* Standardise spelling of debug info
	* Fix: typo in --disable-debug-info in configure error message
	* Docs: change --clock-raw to --clock-cycles
	* Fix: segmentation fault with multi-trace having non-correlated clocks

2016-05-13 babeltrace 1.4.0-rc1
	* Display binary location even if source and symbol lookups fail
	* Tests: Multi-trace stream intersection test
	* Move Python bindings to babeltrace subfolder
	* bootstrap: Standardize on autoreconf -vi
	* Change behaviour of stream-intersection with multiple traces
	* Fix: ctf-text: signed base 8, 16 printout
	* Fix: respect signed integers' length when printing in hex base
	* Fix: debug-info feature enable/disable
	* Port: Add OSX mman.h compat
	* Port: Add OSX endian.h compat
	* Port: Add OSX libuuid compat
	* Fix: swapped libelf and libdw names in configure error message
	* Don't use the .so extension on test assets
	* Fix: warnings on Solaris10
	* Add missing generated tests to gitignore
	* Fix: report error when lttng-live is provided with an IPv6 address
	* Fix: overflow of signed integer results in undefined behaviour
	* Fix: potential close() of uninitialized elf_fd
	* Fix: use of spaces instead of tabs in babeltrace.i.in
	* Set version to 1.4.0-pre
	* Clean-up: add missing new line after end of function
	* Clean-up: remove extra newline in bin-info.c
	* Clean-up: fix comment style in bin-info.c
	* Add tap-driver.sh from automake
	* Tests: skip certain bin-info tests on failure to prevent segfault
	* Typo: succesful* -> successful*
	* Tests: strip ELF symbols from debuginfo-data executables with separate DWARF
	* Python bindings: add has_intersection property to TraceCollection
	* Python bindings: make intersect_mode read-only property
	* Tests: Add missing debuginfo files to dist
	* Use tar-ustar format for dist
	* Tests: Replace prove by autotools tap runner
	* Cleanup test scripts
	* Fix: Don't clean test scripts
	* Fix: Make test_dwarf and test_bin_info tests work out-of-tree
	* Handle test_ctf_writer_complete like the other tests scripts
	* Fix: let automake handle CLEAN and DIST
	* Fix: Remove test_seek_empty_packet and test_seek_big_trace from SCRIPT_LIST
	* configure: introduce new macro AX_LIB_ELFUTILS
	* Docs: fix typos in babeltrace-log(1) manpage
	* Docs: update debuginfo doc
	* Add configure report
	* configure: check for elfutils (libelf and libdw) >= 0.154
	* Set the minimal version of elfutils to 0.154
	* Doc: Add elfutils to README
	* Fix: return -1 on bin_info_lookup_dwarf_function_name failure
	* Harmonize spelling of debug-info
	* Indicate default debug-info build settings in configure help
	* Disable debuginfo by default on Solaris and OSX
	* Docs: Add --debug-info-target-prefix to man page
	* Add source and information to regenerate debuginfo-data
	* Use bool where possible in dwarf and bin-info
	* Rename so-info to bin-info
	* Use printf_debug/verbose in so-info
	* Fix: update tests for new dwarf func name output
	* Update debuginfo to match UST event rename
	* Use g_build_path for DWARF build_id lookup
	* Add --debug-info-target-prefix
	* Refactor offset string printing out of ELF and DWARF lookups
	* Print offset relative to function when using DWARF
	* Print bin location first
	* Add binary location information
	* Fix: prevent uninitialized use of elf_file
	* Only set so info ELF file when needed
	* Use is_pic field instead of reading ELF header
	* Fix: make short_src_path from src_path
	* Tests: clean generated tests scripts
	* Tests: Add missing test scripts to gitignore
	* Tests: Use AC_CONFIG_FILES to generate test scripts
	* Fix out-of-tree tests: seek tests can't find traces
	* Docs: Add debug-info option to BABELTRACE(1)
	* Print "binary+offset" when function name can't be resolved
	* Fix: Don't skip binary path print-out in ELF-only case
	* Show binary path as part of debug info
	* Add --debug-info-full-path option and shorten source name
	* Rename opt_debug_dir to opt_debug_info_dir
	* Fix: cast of 64 bit addresses from trace to 32-bit pointer
	* Tests: dynamically create test list based on enabled features
	* Add intersect mode to python bindings
	* Add bt_ctf_iter_create_intersect to CTF iterator API
	* Docs: add high-level debug info doc
	* Tests: add unit tests for so_info
	* Tests: add unit tests for bt_dwarf
	* Initial implementation of the debuginfo API
	* Store "tracer_name" from the trace's environment
	* Fix: Missing pointer dereference in NULL check
	* Fix: leak of stream intersection positions
	* Remove useless bt_iter when creating intersection
	* Add new test artifacts to .gitignore
	* Tests: use templates for stream intersection and packet_seq_num
	* Tests: fix OOT build by adding test scripts to noinst_SCRIPTS
	* Docs: Add --stream-intersection to the BABELTRACE(1) man page
	* Test the stream intersection feature
	* Option to only show streams' intersection
	* Tests for packet_seq_num handling
	* Output a warning if packets are lost
	* Clean-up: Use memset() to initialize packet_index
	* Support ctf index version 1.1
	* Fix: return event timestamp in _timestamp_at_pos
	* Fix: lttng-live flush when output to file
	* Fix: lttng-live use g_free rather than free
	* Fix: lttng-live data_size and version endianness

2016-02-29 babeltrace 1.3.2
	* Python bindings: work around Python 3.5 behaviour change
	* Fix: out-of-bound memory access
	* Fix: out-of-tree dist fails to find test traces
	* Fix running tests out of tree

2015-11-10 babeltrace 1.3.1
	* Fix: Confusion between stream and stream class IDs
	* Only compare "bison -y" to the basename of YACC variable
	* Cleanup: Don't hardcode include paths unnecessarily
	* Fix: include ctf-scanner-symbols.h to prefix yy_* symbols

2015-10-16 babeltrace 1.3.0
	* Fix: missing includes break the out-of-tree build
	* Fix: Silence missing sentinel warnings on GCC 4
	* Cleanup: remove unused label 'end'
	* Fix: check for socket lib before function checks
	* Fix: memstream compat layer requires use of babeltrace_close_memstream
	* compat send no SIGPIPE: multithread-safe
	* Fix: truncated value in fgetc() usage
	* Fix: handle EINTR return value for bt_posix_fallocate
	* Configure: Add missing checks
	* Implement bt_getline
	* Fix: initialize getline linesize argument to 0
	* Fix: warning, may be used uninitialized
	* Port: Replace dirent->d_type by stat S_ISREG
	* Port: Include config.h globally trough DEFAULT_INCLUDES
	* Port: Add compat for dirfd
	* Port: Add compat for mkdtemp
	* Port: Add compat for strnlen and strndup
	* Port: Use bash to run tests
	* Port: Implement faccessat wrapper
	* Port: implement posix_fallocate wrapper
	* Port: Set required compiler flags to use pthreads
	* Port: Add configure check for __attribute__ support
	* Port: cleanup and portability fix to configure.ac
	* Port: Add support for linkers with no support for 'no-as-needed'
	* Port: Add compat for platforms with no MSG_NOSIGNAL or SO_NOSIGPIPE
	* Port: Add AX_LIB_SOCKET_NSL macro to configure.ac
	* Port: Replace bzero() by memset()
	* Port: Add dummy.c to libcompat
	* Port: uname can return a positive value on success
	* Port: Replace NAME_MAX by MAXNAMLEN
	* Change UUID API prefix from babeltrace_ to bt_
	* Port: Add Solaris libuuid compat
	* Port: Add Solaris endian.h compat
	* Port: make bootstrap script work on most shell
	* Fix: posix_fallocate() returns int > 0 on errors
	* Fix: babeltrace-log packet seek
	* Fix: make check in OOT build with absolute path
	* Fix: make check in out of tree build
	* Fix: 32bit values index_major/minor used as 64bit
	* Hide the packet_seq_num field
	* Build: Update m4 for bison & flex version check to match autoconf-archive file
	* Build: add version check on flex
	* Build: add version check on autoconf
	* Build: m4 macro for Bison version check
	* Fix: Missing postfix_expression DOT keywords in CTF grammar
	* Fix: handle 64-bit trace IDs on 32-bit systems
	* Fix: print format type mismatch warnings on 32-bit
	* Fix: missing parenthesis in offset_align_floor
	* Fix: allow empty CTF files
	* Fix: Incorrect variant tag validation
	* Fix: sanity check in iterator creation
	* Fix: iterate manually over each live trace to add to catch errors
	* Detect Python packages directory on configure

2014-11-04 Babeltrace 1.2.4
	* Fix: make sure we can exit the get_new_metadata loop
	* Docs fix: Change bt_ctf_writer_create_stream return description
	* Fix: offset_s and CTF clocks with frequency != 1GHz

2014-09-23 Babeltrace 1.2.3
	* Fix: incorrect compiler warning
	* Fix: Don't assume that PROT_WRITE grants read permissions
	* Fix: align objstack on 8 bytes
	* Fix Python: Add a comment warning about an API limitation
	* Use BABELTRACE_HOST_NAME_MAX in test_ctf_writer.c
	* Add limits compatibility header
	* Fix: don't perform unaligned integer read/writes
	* Fix: Align buffers from objstack_alloc on sizeof(void *)
	* Fix: bt_ctf_field_type_structure_add_field argument validation

2014-07-22 Babeltrace 1.2.2
	* Fix: Support out of tree builds in babeltrace
	* Fix: mmap trace read the stream_id from the first packet
	* Fix: check the lttng-relayd protocol version
	* Fix: don't update the trace collection if no new streams were received
	* Fix (Python bindings): Return a string if a sequence's element are chars
	* Fix: don't use a return code in _bt_ctf_stream_append_discarded_events
	* Fix: Report the sequence's length field's value as length
	* Fix: Variable name typo in SequenceField and Event classes
	* Fix python: remove weird char at the end of line
	* Fix: add missing files to gitignore
	* Fix: ctf-text: add missing double-quotes around enum tag
	* Fix: Add missing lttng_live_should_quit checks
	* Fix: Report errors occuring in lttng_live_read

2014-03-08 Babeltrace 1.2.1
	* Fix: Accept an input port in the live URL when no session is provided

2014-02-28 Babeltrace 1.2.0
	* Fix: lttng-live parse url port check

2014-02-27 Babeltrace 1.2.0-rc2
	* Fix: events discarded timing inaccuracy
	* Fix: Move offset endianness conversion to get_data_packet
	* Fix: Remove negative comparison to unsigned value
	* Fix: Uninitialized scalar variable
	* Fix: Don't assert on metadata generation failure
	* Fix: add missing SIGTERM and SIGINT handler
	* Fix: Reverse incorrect error message argument order
	* Cleanup: add brackets to lttng-live-plugin.c
	* Cleanup lttng-live: add brackets in lttng_live_read()
	* Cleanup lttng-live: 80 columns wrapping
	* Fix: handle new streams in get_data_packet()
	* Fix: accept empty metadata on append
	* Fix: lttng-live: 100ms active poll delay
	* Fix: lttng-live await metadata
	* Fix: lttng-live recv() and send() flags, partial recv()
	* Fix: missing little endian conversion for one index field
	* Cleanup: remove logically dead code
	* Fix: untrusted value as argument
	* Fix: off by one in lttng-live path length check
	* Fix: fclose return value unchecked
	* Fix: call to append metadata when new metadata is added
	* Fix: use memstream instead of tmp file for live metadata
	* Fix: assign a trace handle to every live trace
	* Fix: get_new_metadata receive all the metadata
	* Fix: Coverity warning CWE-457: Use of Uninitialized Variable
	* Revert "Fix: get_new_metadata receive all the metadata"
	* Revert "Fix: assign a trace handle to every live trace"
	* Fix: assign a trace handle to every live trace
	* Fix: get_new_metadata receive all the metadata
	* CTF: Support incremental metadata append
	* Fix: ctf.c fscanf missing integer length check
	* Bump soname version to 1.0.0
	* Move scanner allocation/free outside of ctf_open_trace_metadata_read
	* CTF parser: prepare for incremental metadata parsing
	* Python bindings: return char arrays as strings in value()
	* Python bindings: sched_switch example clean-up
	* Fix: add missing test scripts to Makefile.am

2014-02-14 Babeltrace 1.2.0-rc1
	* Cleanup: lttng-live: use perror() rather than fprintf for err msg
	* Fix: lttng-live: handle orderly shutdown
	* Fix: Unchecked array index when importing trace indexes
	* LTTng-live usage documentation
	* Fix: ctf: uninitialized packet_index, misuse of index
	* Cleanup: rename lttng live implementation files
	* Attach and list by session name and hostname
	* get_new_streams and multi-session
	* Create the live viewer session before attaching
	* Sync lttng live ABI with lttng-tools
	* Extract adding a trace to the iterator from bt_iter_init
	* Compute discarded events in live
	* Merge real index and cycles index into a single index
	* Fix: import index containing only a header
	* Remove outdated Python bindings test
	* Fix: replace assert with proper error handling
	* Fix: lttng-live: unbounded use of sscanf() in parse_url()
	* Fix: lttng-live should accept 0 in addresses
	* Remove default to display field names in live
	* Remove null checks on g_new0
	* Cleanup: iterator unused pointer value
	* Fix: lttng-live: resource leak
	* Fix: lttng-live uninitialized scalar variable
	* Fix: lttng-live non NULL-terminated strings
	* lttng-live: fix unchecked mkdir return value
	* lttng-live input plugin
	* Live: let read API detect inactive streams, allow streams without fd
	* Add Jérémie Galarneau as co-maintainer
	* Fix: disallow re-using same event ID in same stream
	* Fix: check for unknown enum/variant fields
	* Fix: libbabeltrace lib build dependencies
	* Fixes in babeltrace core to support non-CTF traces
	* Add a private pointer to the ctf_stream_pos
	* Be more widely accepting for missing variant/enum fields
	* Cleanup: remove index_read (unused var)
	* Refuse 0 integer size
	* Fix ctf-writer: possible use after free
	* Fix data_offset when importing the indexes
	* Merge branch 'master' into bindings/python
	* Python-bindings fix: Out of tree build fails to find babeltrace.i
	* Test: Validate that enumeration mapping strings are properly escaped
	* Fix ctf-writer: Quote strings provided as enumeration mappings
	* Fix: read/write mode check
	* Cleanup: do not duplicate code in float fix
	* Fix: floats should set content size in tmp definition
	* Handle empty streams on iterator init
	* Handle packets containing only a header
	* Handle the inactive streams
	* Fix: test content size vs headers len
	* Fix: check packet index len
	* Fix: uncheck null pointer
	* Fix: test for less than 1 byte packets
	* Fix: reversed logic in packet vs content size
	* Fix: clarify end of packet error
	* Fix: string packet boundary handling, bits vs bytes
	* Fix: add stricter checks on packet boundaries
	* Parse CTF indexes
	* Cleanup: fix typo
	* Fix: fail when reading 0 byte event
	* Python-bindings fix: outdated dist target babeltrace.i
	* Python-bindings: Refactor the CTFWriter API
	* Fix: bt_ctf_field_generic_validate should return < 0 on error
	* Fix: Take the iterator's end position into account
	* Fix: Use the bt_iter_set_pos function to set the begin_pos
	* Python-bindings: Move declaration bindings out of the _Definition class
	* Python-bindings: Refactor the FieldDecl and EventDecl classes
	* Python-bindings: Move the _scopes array out of the Event class
	* Python-bindings: Refactor the Event class
	* Python-bindings: Refactor the TraceHandle class to use properties
	* Python-bindings: Refactor the Context class
	* Test ctf-writer: Verify that enumerations are validated before use
	* Fix ctf-writer: Reject enumerations containing no mappings
	* Fix lint warnings
	* Expose text arrays the same way as regular arrays
	* Don't generate Python bindings by default
	* Add a usage example for the CTF Writer Python bindings
	* Add CTF Writer Python bindings
	* Rename the ctf class to CTFReader
	* Fix: Python bindings array access functions write out of bounds
	* Add support for structure fields in the Python bindings
	* Add support for variant fields in the Python bindings
	* Add support for floating point fields in the Python bindings
	* Fix: Use of functions not provided by glib 2.22
	* Fix: Throw a FieldError exception when get_value() fails
	* Remove Python 2 specific examples
	* Add a python bindings sequence test
	* Support for the sequence type
	* Add a generic get_value() implementation
	* Support getting the value of enums
	* Remove the unnecessary underscore prefix
	* Return event fields by field name
	* Merge branch 'master' into bindings/python
	* ctf writer BSD compatibily: remove O_DIRECTORY
	* Fix ctf writer lints
	* linter fix: comparison of fd >= 0
	* test ctf writer: fix lints
	* ctf-writer: fix linter defects
	* ctf-writer: Coding style fix
	* Tests: Add a CTF Writer test
	* Add CTF Writer implementation
	* Add public CTF Writer API headers
	* Fix: Don't create a new packet if ctf_move_pos() seeks out of a packet
	* Fix: Uninitialized ctf_stream_pos structure in ctf_float_write()
	* Fix: Use the packet's final size when mmap-ing the next packet
	* Fix: Close traces on context destruction
	* gcc warning fix: -Wextra
	* Declare enum type to use from C++
	* Fix: test_seek should only output one TAP plan
	* Revert "Add missing declaration of ssize_t as unsigned long for SWIG"
	* Add missing declaration of ssize_t as unsigned long for SWIG
	* Fix (python): use of braces in format strings
	* Add missing call to _bt_ctf_get_decl_from_def() when calling _bt_ctf_get_int_len().
	* Merge branch 'master' into bindings/python
	* Fix: test_seek static linking
	* Tests: fix string octal encoding
	* Add missing Makefile.am
	* make check VPATH build
	* Add missing test files to make dist
	* Tests: Use Perl prove as the testsuite runner
	* Tests: Add trace reading test with babeltrace bin
	* Tests: Split lib tests in multiple standalone test scripts
	* Tests: Rename tests under lib with tests naming convention
	* Tests: Move TAP helpers to tests/utils/tap
	* Fix ctf_clock_declaration_visit returning an error when reading a boolean
	* Fix CTF parser hang with bison 3.0
	* Add missing lex/bison generated files to make clean
	* Put the libbabeltrace-ctf specific parts of babeltrace.pc into a babeltrace-ctf.pc file
	* Test for presence of bison and flex when building from git
	* Fix: Unchecked asprintf/vasprintf return values
	* Missing NULL pointer init in tap.c
	* Add bt_unregister_format function support
	* Fix: libcompat should be noinst (statically linked)
	* Add MinGW definitions to endian.h
	* Add MinGW implementation of UUID functions
	* Add Windows exe files to .gitignore
	* Add MinGW32 libraries to executables
	* Move strerror_r to compat directory
	* Document: manpage: chronologically ordered events
	* Make python bindings compile with trunk
	* Merge branch 'master' into bindings/python
	* babeltrace-log: UTC timestamps
	* Cleanup: comment mismatch with code
	* Add unit test validating seeking to last event of a trace
	* Remove unused function bt_trace_handle_get_id
	* Cleanup: remove whitespaces at end of lines
	* Remove extra -I for python bindings

2013-06-18 Babeltrace 1.1.1
	* Compare traces by stream path as secondary key
	* Fix: use index, not cur_index, for SEEK_SET validation
	* Fix: ctf-text irregular output with disabled field names
	* Support old compilers
	* Remove useless variable assignment
	* Fix: Remove extra quote after an include directive
	* Don't dereference before NULL check
	* eliminate dead code
	* fix babeltrace-log error checking
	* Fix resource leak on error path
	* Fix: handle error checking should compare against NULL
	* Remove unused array in bt_context_add_traces_recursive
	* Fix: Suppress a compiler warning (always-false condition)
	* Cleanup: remove trailing whitespaces
	* Move memstream.h and uuid.h to include/babeltrace/compat directory
	* Fix: handling of empty streams
	* Add new option --clock-offset-ns
	* Fix: add missing error return when create_event_definitions fails
	* Fix: ctf-text should link on libbabeltrace-ctf
	* Move clock to bt_trace_descriptor
	* Remove unused stream_heap
	* Move trace collection pointer to bt_trace_descriptor
	* Move bt_handle to bt_trace_descriptor
	* Move bt_context to bt_trace_descriptor
	* Privatize struct bt_trace descriptor, move trace path
	* Add backward ref from bt_stream_pos to bt_trace_descriptor
	* Fix kFreeBSD build
	* Fix: babeltrace-log timestamps should be in nsec
	* Use objstack for AST allocation
	* Remove unused gc field
	* Use objstack to store nodes
	* Use objstack for strings
	* Implement objstack for parser
	* Fix: octal and hex string handling
	* Simplify error node
	* Lexer cleanup
	* Fix: invalid integer suffix parsing
	* Test cleanup
	* Test cleanup
	* Test cleanup
	* Fix: bootstrap should call libtoolize
	* Fix bootstrap script
	* Use uint64_t for packet_map_len
	* Add smalltrace succeed/fail test cases
	* Support packets and trace files smaller than page size
	* Move ctf-metadata plugin into its own shared object
	* Implement ctf-metadata output plugin
	* Handle make_node errors with TLS dummy node
	* Remove nested expressions
	* Eliminate dead code
	* Fix: trace_collection_add() add after check
	* Handle integers in lexer rather than grammar
	* Implement perror printf
	* Support escape characters in metadata strings
	* Add error node to AST
	* Introduce macro to enforce matching enum to string for node types
	* Fix: add semantic check in grammar
	* Implement likely/unlikely ifdefs
	* Fix unary constant use after error
	* Use new print macros in ctf-parser.y
	* Print error on invalid token
	* Implement macros for error printout
	* Add line number to parser nodes
	* Fix: handle errors gracefully
	* Fix: memleak on error path
	* Add missing NULL pointer check
	* Show token in CTF parser error
	* Remove unused lineno from struct ctf_scanner
	* Show line numbers in CTF parser errors
	* Ignore Windows-style EOL character in metadata
	* Replace AM_PROG_MKDIR obsolete macro with AC_PROG_MKDIR_P

2013-03-23 Babeltrace 1.1.0
	* Reinsert "at end of stream" message for discarded events
	* Improvement: Message from babeltrace concerning discarded events needs i
	* Cleanup: typo fix
	* Cleanup: add end of line at end of verbose message
	* Fix: misleading message from babeltrace --verbose
	* Fix: babeltrace --fields all  overrides --no-delta
	* Add verbosity to stream id error message
	* Fix: Ensure the specified input format is CTF
	* Fix: Undefined behavior of double free on strlist in get_names_args
	* Fix: ctf-text: don't close stdout
	* Fix: warning message for unexpected trace byte order
	* Namespace the struct declaration
	* Namespace the struct definition
	* Namespace the struct format
	* Namespace the struct mmap_stream
	* Namespace the struct trace_descriptor
	* Namespace struct stream_pos
	* Namespace compliance for dependencies function
	* Cleanup error messages
	* Fix: babeltrace: make '-w' actually work
	* Convert the unit tests to the TAP format
	* Spelling cleanups within comments
	* Move the bitfield test to tests/lib/
	* Fix: Added a null pointer check to bt_ctf_field_name
	* Add babeltrace.pc to gitignore
	* namespacing: place flex/bison symbols under bt_yy namespace
	* namespace the lookup_integer function
	* namespace the definition functions
	* namespace the variant functions
	* namespace the declaration functions
	* namespace the collection functions
	* namespace the heap functions
	* namespace the struct functions
	* namespace the string functions
	* namespace the sequence functions
	* namespace the int functions
	* namespace the enum functions
	* namespace definition_ref and definition_unref
	* namespace declaration_ref and declaration_unref
	* namespace the array functions
	* namespace the scope_path functions
	* Hide internal functions of libbabeltrace-ctf
	* Hide internal functions of ctf-text
	* BT_HIDDEN macro
	* Namespace the lookup_enum function

2012-01-24 Babeltrace 1.0.3
	* Fix: Double free when calling bt_context_remove_trace()
	* Add missing runall.sh to dist packaging
	* Fix: alignment of compound types containing array field

2012-01-11 Babeltrace 1.0.2
	* Fix: add tests/lib missing files to Makefile.am

2012-01-11 Babeltrace 1.0.1
	* Provides a basic pkg-config file for libbabeltrace
	* Fix erroneous warning/error messages
	* Fix comment in context.h
	* Cleanup: Remove whitespace at EOL from mit-license.txt
	* Add missing permission notice in each source file
	* Adding a test which do a sequence of seek BEGIN, LAST, BEGIN, LAST
	* Run seek tests on a second trace file
	* Add #define _GNU_SOURCE to remove warning about asprintf
	* Include a test for SEEK_BEGIN and SEEK_LAST
	* Fix: Report success even if we find at least one valid stream in find_max_timestamp_ctf_stream_class
	* Fix SEEK_BEGIN for streams that do not contain any event

2012-10-27 Babeltrace 1.0.0
	* tests: add test traces to distribution tarball
	* Document bash requirement for make check in README
	* Add tests to make check
	* Fix: add missing header size validation
	* callbacks.c: handle extract_ctf_stream_event return value
	* Cleanup: fix cppcheck warning
	* Cleanup: fix cppcheck warnings
	* fix double-free on error path

2012-10-18 Babeltrace 1.0.0-rc6
	* Add valgrind suppression file for libpopt
	* Fix: unplug memory leak that causes popt-0.13 to segfault
	* Fix: test all close/fclose ret val, fix double close
	* Cleanup: add missing newline
	* Fix: fd leak on trace close
	* Fix memory leaks induced by lack of libpopt documentation
	* babeltrace: fix poptGetOptArg memleak
	* plugins: implement plugin unregister
	* Doc: valgrind with babeltrace (glib workaround)
	* callsites: fix memory leak
	* Fix: free all the metadata-related memory
	* Fix : Free the iterator callback arrays
	* Fix : cleanup teardown of context
	* Fix : protect static float and double declarations
	* callsite: support instruction pointer field
	* Document that list.h is LGPLv2.1, but entirely trivial
	* Fix: callsite support: list multiple callsites
	* Add callsite support
	* Fix: Allow 64-bit packet offset
	* Fix: emf uri: surround by " "
	* Handle model.emf.uri event info
	* Fix: Documentation cleanup
	* Fix: misplaced C++ ifdef
	* Fix babeltrace-log get big line when the input file last line don't have enter
	* API Fix: bt_ctf_iter_read_event_flags
	* Fix: get encoding for char arrays and sequences
	* Fix: access to declaration from declaration_field
	* Fix: get_declaration_* should not cast to field
	* Fix babeltrace-log uninitialized memory (v2)
	* Revert "Fix babeltrace-log uninitialized memory"
	* Fix babeltrace-log uninitialized memory
	* Fix: access field properties by declaration
	* Fix: check return value of get_char_array
	* Fix: C++ support to API header files

2012-08-27 Babeltrace 1.0.0-rc5
	* Change default printout to add host, process names and vpid
	* Add support for trace:hostname field
	* Fix: allow specifying more than one input trace path
	* Fix: make warnings (partial errors) visible
	* Fix: --clock-force-correlate to handle trace collections gathered from v
	* Documentation: update API doc with enum functions
	* Fix: API: remove unsupported BT_SEEK_END from API
	* API documentation
	* Cleanup: shut up gcc uninitialized var warning
	* Fix: support large files on 32-bit systems
	* Fix: remove unused fts.h include
	* Fix: add missing enum support to API
	* Fix: handle clock offset with frequency different from 1GHz
	* Cleanup: update ifdef wrapper name
	* Fix: clarify bt_ctf_get_field_list
	* Fix trace-collection.h: No such file or directory that build code with l
	* Fix: check return value of bt_context_create
	* Fix: ensure mmap_base_offset is zeroed on initialization
	* Fix: Reswitch to FTW for add_traces_recursive
	* Fix: don't free unallocated index
	* Fix: don't close the metadata FD if a FP is passed
	* Add BT_SEEK_LAST type to bt_iter_pos
	* Fix: iterator.c BT_SEEK_RESTORE: check return value
	* Fix: complete error handling of babeltrace API
	* cleanup: protected -> hidden: cleanup symbol table
	* Fix: add mmap_base_offset to ctf_stream_pos
	* Fix: assign the current clock for mmap traces
	* Fix: libbabeltrace add missing static declaration
	* Fix: safety checks for opening mmap traces
	* Remove trace-collection.h from include_headers
	* Fix: protect visibility of ctf-parser functions
	* Fix: correct name of bt_ctf_field_get_error in comments and typo in man 
	* Fix: wrong type in bt_ctf_get_uint64/int64
	* API cleanup name get_timestamp and get_cycles
	* fix comment struct bt_saved_pos
	* Fix: Add missing clock-types.h
	* Get rid of clock-raw and use real clock
	* Cleanup (messages): Make the wording of the signedness warning clearer
	* Fix: error path if heap_init fails
	* Fix: Remove obsolete bt_iter_seek function
	* Make the signedness warning useful with the field name
	* Fix: Restore heap for SEEK_BEGIN
	* Fix: check if handle is valid
	* Fix: iterator set_pos
	* Fix: get rid of consumed flag
	* Fix: add missing heap_copy
	* Fix: babeltrace assert() triggered by directories within trace
	* Several fixes for bt_iter_pos related functions
	* Fix iterator: various fixes
	* Fix: remove duplicate yydebug var
	* Fix babeltrace iterator lib: seek at time 0

2012-05-30 Babeltrace 1.0.0-rc4
	* Add CodingStyle to tarball
	* Add coding style document
	* Fix: babeltrace should use output format argument
	* Fix: accept traces which skip stream ids
	* Use mmap_align
	* align header: define PAGE_SIZE
	* Implement mmap alignment header
	* Cleanup: type warnings
	* Cleanup: do not overwrite const argv parameters

2012-05-29 Babeltrace 1.0.0-rc3
	* Fix: converter error logic
	* Fix: report appropriate field in error message
	* Fix: support 64-bit events discarded counter types
	* Fix: add missing bt_ctf_get_int_len API
	* Fix bt_context_add_traces_recursive error code

2012-04-24 Babeltrace 1.0.0-rc2
	* Fix: return an error if no trace can be opened
	* Fix: double destroy in context remove

2012-04-18 Babeltrace 1.0.0-rc1
	* Fix: -n "field names" option should allow "none"
	* Fix: Show context field name by default
	* Manpage fix: babeltrace-log manpage should refer to lttng(1)
	* Clarify warning message for events discarded
	* Fix: babeltrace should skip erroneous traces
	* Fix: put explicit error messages and warnings when opening a trace
	* Fix: segfault on error handling
	* Fix: enum must use last value + 1 as next item value
	* Fix: warn, and don't assert, when reading a value outside enum range
	* API Fix : missing list fields of event decl
	* API fix : fill the values for timestamp begin and end
	* API : list of events in the trace
	* UUID field should be optional, as specified by CTF spec
	* Babeltrace ctf-text duplicated error message
	* API fix/breakage : reexporting bt_ctf_event
	* fix/breakage API : replace bt_ctf_event
	* add ctf_event_definition pointer to ctf_stream_definition
	* Rename ctf_event to ctf_event_declaration
	* Rename ctf_stream to ctf_stream_definition
	* Rename ctf_stream_event to ctf_event_definition
	* Rename ctf_stream_class to ctf_stream_declaration
	* Cleanup: Remove unneeded local variables from function
	* API Fix : give access to trace_handle and context
	* API Fix : handle id to use the public functions
	* Fix : add the missing seek begin

2012-03-16 Babeltrace 1.0.0-pre4
	* fix : bt_ctf_iter_create defaults to BEGIN pos
	* Fix : only one iterator per context
	* Fix error checking in bt_context_add_traces_recursive
	* bt_context_add_trace, bt_iter_pos and bt_iter needed some more comments.
	* Fix API: add const qualifiers, privatize struct bt_ctf_event
	* Fix: split ctf/event.c
	* Fix: seek by timestamp
	* Fix: remove leftover code from seek begin (unimplemented for now)
	* Fix: seek error handling
	* Fix: callbacks.c: more explicit error msg
	* Fix: ctf/iterator.h bt_ctf_iter_read_event() comment
	* Add missing iterator.h into the git repo
	* API fix: Move ctf iterator API members to new babeltrace/ctf/iterator.h
	* API cleanup: Move bt_iter_create/destroy to internal header
	* Fix: update missing copyrights and ifdef protection mismatch
	* Clarify clock correlation error message
	* Fix build warning: set -lpopt as LDFLAGS rather than CFLAGS
	* Fix: add missing _GNU_SOURCE define to babeltrace-log.c
	* Fix: Add memstream.h dependency to Makefile.am
	* Implement fallback for systems lacking open_memstream and fopenmem
	* Fix: try to include endian.h by default

2012-03-02 Babeltrace 1.0.0-pre3
	* Fix uuid in metadata
	* Babeltrace wrapper update
	* uuid wrapper: fix use in visitor
	* Endian wrapper use fix
	* FreeBSD uuid wrapper fixes
	* Fix missing uuid wrapper change
	* Add endian.h wrapper
	* Use standard __LONG_MAX__ instead of __WORDSIZE
	* Create BSD wrapper for uuid
	* fix API : deal with the optional underscore
	* Fix API : functions to access fields properties

2012-02-23 Babeltrace 1.0.0-pre2
	* linker: privatize prio_heap and babeltrace_types
	* Linker: privatize libbabeltrace_types
	* Link statically to internal libraries
	* Combine duplicated API/pretty-print timestamp code
	* API : export the offsetted timestamp
	* Fix : segfault when printing timestamp on index
	* Fix : coherency in const parameters

2012-02-20 Babeltrace 1.0.0-pre1
	* Generically print tracer version (and env) in verbose mode
	* Fix open_mmap_trace missing support
	* fix: context.h add missing documentation for packet_seek parameter
	* Cleanup iterator.h
	* Fix callback.h documentation
	* Cleanup: babeltrace.h does not need to include ctf/events.h
	* API fix: Move callbacks to CTF plugin
	* Removed unneeded ctf_* forward declarations from babeltrace.h
	* Remove unneeded forward declarations (ctf-specific) from iterator.h
	* fix: move read event from iterator to event.h
	* Fix: ctf specific events.c needs to be within CTF plugin
	* API fix: packet_seek should take an index rather than offset
	* Fix API: allow packet_seek override
	* Fix: add lib missing includes
	* Fix: packet_seek is local to plugins, but can be overridden
	* Fix API: rename unclear move_pos_slow to packet_seek
	* Fix: Check for unknown format
	* Fix: do not use ctf-specific struct in format.h
	* fix : callback type, doc and links to libbabeltrace
	* Fix : callback chain len

2012-02-16 Babeltrace 0.12
	* Typedef bt_intern_str
	* Export the list header with a new namespace
	* API : add_trace return the trace_handle id
	* fix manpage: refer to lttng(1)
	* API : cleanup includes
	* API : Access CTF events fields
	* manpage: Add babeltrace-log.1
	* API : seek by timestamp
	* Move the add_traces_recursive out of the library
	* manpage: use pp instead of PP

2012-02-13 Babeltrace 0.11.1
	* Add trace-collection.h to the installed headers

2012-02-13 Babeltrace 0.11
	* Add --clock-force-correlate option
	* lib: open trace error handling fix
	* Use default if there is no clock declaration
	* iterator: fix type warning on 32-bit build
	* Use 64-bit type for packet and content size
	* Fix context API
	* Add missing context-internal.h
	* struct bt_context is opaque
	* Update comment to match context API code
	* Print loglevel names
	* babeltrace lib cleanup, folded with open/remove trace functions
	* API : iterator get and set position

2012-02-09 Babeltrace 0.10
	* Fix clock freq
	* clock: use freq field
	* Show env. in verbose mode
	* Remove all code that depends on trace collection directory structure
	* Use environment information for extra fields
	* Parse environment declarations from LTTng-modules and LTTng-UST
	* Fix typo
	* Add babeltrace.1 manpage
	* Update help
	* Install license files and dependency listing into the system doc
	* Add ChangeLog to doc install

2012-02-02 Babeltrace 0.9
	* Allow signed values in get_signed. Cast unsigned into signed.
	* Show loglevel information only with value
	* env needs to be a keyword too
	* Add env {} warning test case
	* Add environment (env {}) parser-level support
	* Revert "Remove leading underscores from identifiers directly in lexer"
	* Remove leading underscores from identifiers directly in lexer
	* Fix: do not remove field names when adding fields
	* API : iterator namespace cleanup
	* Time offset: use trace offset average
	* API : trace_handle
	* Print event discarded at end of stream
	* Discarded event time range is between last packet event and timestamp_end
	* Print time range during which events have been dropped
	* Print events discarded
	* Add clock offset support
	* Warn user of clock offsets do not match
	* Add clocks to trace collection
	* clock: show as time of day
	* Implement clock mapping within integer type
	* Implement clock IR generation
	* Add warning tests
	* Relax unknown field handling: warn instead of error
	* Fix erroneous use of "-n" for additional fields, add "-f"
	* Output warnings and errors to stderr
	* Fix double typedef of bt_event_name
	* Parse clock descriptions
	* API : split iterator headers from babeltrace.h
	* Add missing context.h/context.c
	* Introduce contexts
	* Fix parallel build for lib/
	* Organise libbabeltrace
	* Export the format.h header
	* Create the babeltrace include dir on install
	* callbacks: use correct type for element size
	* callbacks: Fix set size array size
	* Fix callback chain array usage
	* Add time delta to ctf-text
	* ctf-text: show timestamp in sec.nsec
	* Fix wrong variable error check
	* Use the generic call to move_pos_slow

2011-12-12 Babeltrace 0.8
	* Add loglevel support
	* Update libpopt dependency to 1.13
	* Document dependency on libpopt >= 1.8
	* Describe libtool version dependency
	* AC_PROG_LIBTOOL is deprecated in favor of LT_INIT
	* Use realpath for path
	* Helper function to extract string from fields
	* Use realpath on trace collection path
	* allow printing domains when no procname are present, handle
	  various / patterns
	* Add trace:domain,trace:procname,trace:pid support
	* Add "-n trace" option to print trace name
	* Do not install ctf-parser-test
	* Make ctf open errors more verbose
	* configure.ac: add check for popt library
	* Show field names by default, enhance --names option
	* Move opt_field_names/babeltrace_verbose/babeltrace_debug into lib
	* Add mmap trace reading
	* Pass stream pointer with callback caller data

2011-09-29 Babeltrace 0.7
	* Add missing stdint.h
	* Use integer extraction functions
	* Extract int and char arrays from fields
	* Add parameters to callbacks
	* Fix float support
	* Fix type cast warning
	* Integer support: add missing signed casts
	* Remove underscore prefix from field names (pretty-print)
	* Fix sequence iteration
	* Fix sequence field name use after free
	* Fix support for empty streams
	* Optional file pointer to metadata
	* Specify callback to move packet in open_trace
	* Free the callbacks on iter_destroy
	* Add callback support
	* Basic seek support
	* Add callback API
	* Enhance babeltrace API with position save/restore
	* Remove unused structure forward declarations
	* Remove stale local .c struct declarations (unused)
	* Annotate branches in ctf.c event reading/writing code
	* Annotate prio heap likely branch
	* Annotate likely/unlikely branches in headers

2011-08-12 Babeltrace 0.6
	* Introduce Babeltrace public API: babeltrace.h
	* Fix support for gold linker: inappropriate dep removal of plugins

2011-08-12 Babeltrace 0.5
	* Initialize size to 0 to eliminate incorrect gcc uninitialized
	  var warning
	* Fix non-matching packet context wrt last packet event read
